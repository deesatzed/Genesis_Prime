
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 84% 4.9%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 224.3 76.3% 94.1%;
    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Custom scrollbar styles */
.scrollbar-hide {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

/* Custom animations */
@keyframes consciousness-pulse {
  0%, 100% {
    opacity: 0.6;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
}

@keyframes data-flow {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(100%);
    opacity: 0;
  }
}

@keyframes neural-activity {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

.consciousness-pulse {
  animation: consciousness-pulse 3s ease-in-out infinite;
}

.data-flow {
  animation: data-flow 2s linear infinite;
}

.neural-activity {
  background: linear-gradient(-45deg, #1e293b, #334155, #475569, #64748b);
  background-size: 400% 400%;
  animation: neural-activity 4s ease infinite;
}

/* Glow effects */
.glow-blue {
  box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
}

.glow-purple {
  box-shadow: 0 0 20px rgba(147, 51, 234, 0.3);
}

.glow-green {
  box-shadow: 0 0 20px rgba(34, 197, 94, 0.3);
}

.glow-yellow {
  box-shadow: 0 0 20px rgba(234, 179, 8, 0.3);
}

/* Text effects */
.text-glow {
  text-shadow: 0 0 10px currentColor;
}

/* Consciousness visualization specific styles */
.consciousness-node {
  filter: drop-shadow(0 0 8px rgba(59, 130, 246, 0.6));
}

.reality-frame {
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.1) 0%, rgba(147, 51, 234, 0.1) 100%);
  border: 1px solid rgba(59, 130, 246, 0.3);
}

.memory-trace {
  background: linear-gradient(135deg, rgba(34, 197, 94, 0.1) 0%, rgba(59, 130, 246, 0.1) 100%);
  border: 1px solid rgba(34, 197, 94, 0.3);
}

.self-model {
  background: linear-gradient(135deg, rgba(147, 51, 234, 0.1) 0%, rgba(236, 72, 153, 0.1) 100%);
  border: 1px solid rgba(147, 51, 234, 0.3);
}

/* Swarm communication styles */
.message-bubble {
  position: relative;
  overflow: hidden;
}

.message-bubble::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  animation: data-flow 3s linear infinite;
}

/* Agent status indicators */
.agent-active {
  background: radial-gradient(circle, rgba(34, 197, 94, 0.3) 0%, transparent 70%);
}

.agent-processing {
  background: radial-gradient(circle, rgba(59, 130, 246, 0.3) 0%, transparent 70%);
}

.agent-communicating {
  background: radial-gradient(circle, rgba(147, 51, 234, 0.3) 0%, transparent 70%);
}

.agent-dormant {
  background: radial-gradient(circle, rgba(107, 114, 128, 0.3) 0%, transparent 70%);
}

/* Responsive design helpers */
@media (max-width: 768px) {
  .consciousness-visualization {
    height: 300px;
  }
  
  .agent-panel {
    min-height: 400px;
  }
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
  .consciousness-pulse,
  .data-flow,
  .neural-activity {
    animation: none;
  }
}

/* Focus styles for better accessibility */
.focus-visible:focus {
  outline: 2px solid rgba(59, 130, 246, 0.8);
  outline-offset: 2px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .consciousness-node {
    filter: contrast(1.5);
  }
  
  .reality-frame,
  .memory-trace,
  .self-model {
    border-width: 2px;
  }
}
