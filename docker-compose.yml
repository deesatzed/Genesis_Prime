version: '3.8'

services:
  # Backend - Genesis Prime Consciousness System
  genesis-backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: genesis-prime-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - ENVIRONMENT=production
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - agent-profiles:/app/agent_profiles
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend - Next.js Dashboard
  genesis-frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: genesis-prime-frontend
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://genesis-backend:8000
      - NEXT_PUBLIC_FRONTEND_URL=http://localhost:3001
    depends_on:
      genesis-backend:
        condition: service_healthy
    networks:
      - genesis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Agent Onboarding Service (Optional - for automated setup)
  genesis-onboarding:
    build:
      context: .
      dockerfile: docker/Dockerfile.onboarding
    container_name: genesis-prime-onboarding
    environment:
      - PYTHONPATH=/app
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BACKEND_URL=http://genesis-backend:8000
    volumes:
      - agent-profiles:/app/agent_profiles
      - ./logs:/app/logs
    depends_on:
      genesis-backend:
        condition: service_healthy
    networks:
      - genesis-network
    restart: "no"  # Run once for onboarding
    profiles:
      - onboarding  # Optional service

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: genesis-prime-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - genesis-frontend
      - genesis-backend
    networks:
      - genesis-network
    restart: unless-stopped
    profiles:
      - production  # Optional for production deployment

volumes:
  agent-profiles:
    driver: local

networks:
  genesis-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
